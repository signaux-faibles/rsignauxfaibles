# Generated by roxygen2: do not edit by hand

S3method(explain,sf_task)
S3method(export,sf_task)
S3method(load_hist_data,sf_task)
S3method(load_new_data,sf_task)
S3method(optimize_hyperparameters,sf_task)
S3method(predict,sf_task)
S3method(prepare,sf_task)
S3method(print,sf_task)
S3method(split_data,sf_task)
S3method(train,sf_task)
export(alert_levels)
export(copy_for_new_run)
export(evaluate)
export(explain)
export(explain_gam)
export(export)
export(export_scores_to_mongodb)
export(filter_task)
export(format_for_export)
export(get_default_explanation_method)
export(get_default_learner)
export(get_default_measure)
export(get_default_param_set)
export(get_default_pipeline)
export(get_fields)
export(get_fields_training_light)
export(get_prepared_data)
export(get_scores)
export(get_sirets_of_detected)
export(get_test_task)
export(import_data)
export(load)
export(load_hist_data)
export(load_new_data)
export(log_metric)
export(log_param)
export(mark_known_sirets)
export(name_file)
export(optimize_hyperparameters)
export(predict_model)
export(prepare)
export(replace_hist_data)
export(replace_new_data)
export(save)
export(scale_color_sf)
export(scale_fill_sf)
export(sf_colors)
export(sf_task)
export(sf_theme)
export(split_data)
export(train)
import(dplyr)
importFrom(data.table,":=")
importFrom(lubridate,"%m+%")
importFrom(lubridate,"%m-%")
importFrom(mlr3pipelines,"%>>%")
importFrom(stats,predict)
